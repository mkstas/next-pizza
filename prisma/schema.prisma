// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id          String   @id @default(uuid())
  phoneNumber String   @unique @map("phone_number")
  fullname    String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Category {
  id        String    @id @default(uuid())
  title     String    @unique
  alias     String    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  products  Product[]

  @@map("categories")
}

model Product {
  id                 String              @id @default(uuid())
  category           Category            @relation(fields: [categoryId], references: [id])
  categoryId         String              @map("category_id")
  title              String
  alias              String              @unique
  description        String?
  productIngredients ProductIngredient[]
  productVariants    ProductVariant[]

  @@map("products")
}

model Ingredient {
  id                 String              @id @default(uuid())
  title              String
  alias              String              @unique
  imageUrl           String              @map("image_url")
  price              Int
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @updatedAt @map("updated_at")
  productIngredients ProductIngredient[]

  @@map("ingredients")
}

model ProductIngredient {
  id           String     @id @default(uuid())
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId String     @map("ingredient_id")
  product      Product?   @relation(fields: [productId], references: [id])
  productId    String?    @map("product_id")
  required     Boolean    @default(false)
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")

  @@map("product_ingredients")
}

model ProductVariant {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @map("product_id")
  imageUrl  String   @map("image_url")
  price     Int
  weight    Int
  volume    Int?
  pizzaType String?  @map("pizza_type")
  pizzaSize Int?     @map("pizza_size")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("product_variants")
}
